/**:
  ros__parameters:
    node:
      show_debug_info: false          # enable detailed debug logging  
                                       # ↑ Increase → more logs; ↓ decrease → fewer logs  
      enable_yaw_bias_estimation: true  # estimate constant gyro yaw bias in the EKF state  
                                       # ↑ false → no bias compensation (more drift); ↓ irrelevant  
      predict_frequency: 25.0         # Hz, how often the EKF prediction step runs  
                                       # ↑ faster → smoother integration but higher CPU; ↓ slower → less smooth  
      tf_rate: 25.0                   # Hz, how often to broadcast the map→base_link TF  
                                       # ↑ faster → more up-to-date TF; ↓ slower → TF updates less often  
      publish_tf: true                # whether to actually publish the TF  
                                       # true → TF published; false → only topic output, no TF  
      extend_state_step: 25           # extra prediction steps when applying delayed measurements  
                                       # ↑ more steps → better accuracy with old data but more lag/compute; ↓ fewer → less adjustment  

    pose_measurement:
      # for Pose measurement (e.g. GNSS or pose-graph)
      pose_additional_delay: 0.2         # sec, artificial delay to align pose timestamps  
                                       # ↑ larger → the EKF treats measurements as older; ↓ smaller → less time compensation  
      pose_measure_uncertainty_time: 0.03 # sec, inflate pose covariance for timestamp jitter  
                                       # ↑ larger → filter trusts pose less; ↓ smaller → trusts pose more (less smoothing)  
      pose_smoothing_steps: 3             # number of past poses to average before EKF update  
                                       # ↑ more → smoother but more lag; ↓ fewer → more responsive but jittery  
      pose_gate_dist: 250.0               # M-distance gate threshold (~ significance 1e-10)  
                                       # ↑ larger → fewer pose outliers rejected; ↓ smaller → stricter gating, potential false rejects  

    twist_measurement:
      # for Twist measurement (e.g. wheel encoder or CAN velocity)
      twist_additional_delay: 0.01        # sec, artificial delay to align twist timestamps  
                                       # ↑ larger → treat twist as older; ↓ smaller → less delay compensation  
      twist_smoothing_steps: 10           # number of past twists to average before EKF update  
                                       # ↑ more → smoother twist but more lag; ↓ fewer → more responsive, more noise  
      twist_gate_dist: 46.1               # M-distance gate threshold (~ significance 1e-10)  
                                       # ↑ larger → fewer twist outliers rejected; ↓ smaller → stricter gating  

    process_noise:
      # process-model noise stddev (random walk assumptions)
      proc_stddev_yaw_c: 0.01   # rad/s², yaw‐rate noise  
                                       # ↑ larger → filter trusts measurements more, model less (more jitter); ↓ smaller → trusts model more, smoother  
      proc_stddev_vx_c: 5.0     # m/s², forward velocity noise  
                                       # ↑ larger → filter follows velocity inputs more (can amplify noise); ↓ smaller → smoother, less responsive  
      proc_stddev_wz_c: 0.5     # rad/s², lateral/angular noise  
                                       # ↑ larger → filter reacts quicker to angular changes; ↓ smaller → smoother heading but slower to turn  

    simple_1d_filter_parameters:
      # 1D smoothing filter noise stddev
      z_filter_proc_dev: 1.0         # m/s² for height filter  
                                       # ↑ larger → more reactive (less smoothing); ↓ smaller → more smoothing  
      roll_filter_proc_dev: 0.01     # rad/s² for roll filter  
                                       # ↑ larger → quicker roll updates; ↓ smaller → smoother roll  
      pitch_filter_proc_dev: 0.01    # rad/s² for pitch filter  
                                       # ↑ larger → quicker pitch updates; ↓ smaller → smoother pitch  

    diagnostics:
      # diagnostic thresholds and ellipses
      pose_no_update_count_threshold_warn: 5   # warn after this many cycles without pose update  
                                       # ↑ larger → warn later; ↓ smaller → warn sooner  
      pose_no_update_count_threshold_error: 100  # error after this many cycles without pose update  
                                       # ↑ larger → error later; ↓ smaller → error sooner  
      twist_no_update_count_threshold_warn: 5    # warn after this many cycles without twist update  
                                       # ↑ larger → warn later; ↓ smaller → warn sooner  
      twist_no_update_count_threshold_error: 100  # error after this many cycles without twist update  
                                       # ↑ larger → error later; ↓ smaller → error sooner  
      ellipse_scale: 3.0                        # multiplies ellipse axes for display  
                                       # ↑ larger → bigger visualization ellipses; ↓ smaller → smaller ellipses  
      error_ellipse_size: 1.5                   # size of “error”‐level ellipse  
                                       # ↑ larger → more permissive error region; ↓ smaller → stricter  
      warn_ellipse_size: 1.2                    # size of “warning”‐level ellipse  
                                       # ↑ larger → more permissive yaw warning; ↓ smaller → stricter  
      error_ellipse_size_lateral_direction: 0.3 # lateral axis size for error ellipse  
                                       # ↑ larger → more lateral leeway; ↓ smaller → stricter  
      warn_ellipse_size_lateral_direction: 0.25 # lateral axis size for warning ellipse  
                                       # ↑ larger → more leeway; ↓ smaller → stricter  

    misc:
      threshold_observable_velocity_mps: 0.0  # [m/s], minimum velocity to be considered “observable”  
                                       # ↑ higher → filter ignores low‐speed updates; ↓ lower → includes more slow speeds  
      pose_frame_id: "map"                   # TF frame of incoming pose measurements  
                                       # change if your pose source uses a different frame  
